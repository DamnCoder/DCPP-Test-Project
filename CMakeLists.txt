cmake_minimum_required(VERSION 3.1)

#[PROJECT_NAME]
PROJECT(DCPPTest)

#[BUILD_TYPE]
SET(CMAKE_BUILD_TYPE Debug)

# Set the output folders where the program will be created
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake_modules)
SET(ASSETS_PATH ${PROJECT_SOURCE_DIR}/assets)

SET(SRC_DIR ${PROJECT_SOURCE_DIR}/project)

# C++ Dialect
SET(CMAKE_CXX_STANDARD 11) # C++11...
SET(CMAKE_CXX_STANDARD_REQUIRED ON) #...is required...
SET(CMAKE_CXX_EXTENSIONS OFF) #...without compiler extensions like gnu++11

# FindSDL2.cmake
#FIND_PACKAGE(SDL2 REQUIRED)
#INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIR})

# OpenGL
#FIND_PACKAGE(OpenGL REQUIRED)
#INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIR})

#FIND_PACKAGE(GLEW REQUIRED)
#INCLUDE_DIRECTORIES($(GLEW_INCLUDE_DIRS))

#FIND_PACKAGE(GLUT REQUIRED)

#[PRJ_INCLUDE]
INCLUDE_DIRECTORIES(${SRC_DIR}/include)

#[PRJ_SOURCE_FILES]
SET(SOURCES
	${SRC_DIR}/src/main.cpp
	${SRC_DIR}/src/testgame.cpp
	${SRC_DIR}/src/testhfsm.cpp
)

#[PRJ_HEADER_FILES]
SET(HEADERS
	${SRC_DIR}/include/testgame.h
	${SRC_DIR}/include/testhfsm.h
)

# Generate the executable from the sources
ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCES} ${HEADERS})

ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/externals/dcpp)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/externals/dcpp/project/include)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/externals/dcpp/externals/dcpp_signals/project/include)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/externals/dcpp/externals/dcpp_math/project/include)

ADD_DEPENDENCIES(${PROJECT_NAME} DCPP)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} 
	#${SDL2_LIBRARY}
	#${OPENGL_LIBRARIES}
	#${GLEW_LIBRARIES}
	#${GLUT_LIBRARIES}
	DCPP
)
 
# Set the location for executable installation
INSTALL(TARGETS ${PROJECT_NAME} DESTINATION ${EXECUTABLE_OUTPUT_PATH})
INSTALL(DIRECTORY ${ASSETS_PATH} DESTINATION ${EXECUTABLE_OUTPUT_PATH})